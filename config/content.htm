<h1>About</h1>
<p>倉儲:<a href="https://github.com/mdecd2023/2b3-pj3bg3">https://github.com/mdecd2023/2b3-pj3bg3</a></p>
<p>網站:<a href="https://mdecd2023.github.io/2b3-pj3bg3/">https://mdecd2023.github.io/2b3-pj3bg3/</a></p>
<p>組長:</p>
<p>41023226 陳建霖</p>
<p>組員:</p>
<p>41023230 彭聖宗</p>
<p>41023233 黃文彥</p>
<p>41023231 湛有杰 </p>
<p>41023232 雲敬家</p>
<p>41023253 謝宗銘</p>
<p>41023220 陳冠珉</p>
<p>41023250 蔡叡得</p>
<p></p>
<h1>pj3</h1>
<p>專案三: 接續專案二, 各組需<span>對雙輪車進行設計改良,  以提升行進與對戰效能</span>, 各組需採 CAD 進行場景與多輪車零組件設計後, 轉入足球場景中<span>以鍵盤 arrow keys 與 wzas 等按鍵進行控制</span>, 對陣雙方每組將有<span>四名輪車球員</span>, 且每兩人在同一台電腦上操作, 完成後各組需在分組網站中提供所有相關檔案<span>下載連結</span>, 且提供<span>線上分組簡報</span>與<span>分組 pdf 報告</span>連結.</p>
<p><strong>球賽計分系統必須採 .ttm 格式建立 (0~99), 使能通用於各類場景計數之用, 並可擴增至三位數計分.</strong></p>
<p>除了採用 LED 顯示計分外, 請另外以建立以<strong>機械轉盤傳動計分系統</strong><span> </span>(<a href="https://www.google.com/search?q=mechaincal+counter+design">mechanical counter</a>), 且採 .ttm 格式建立.</p>
<p>協同產品設計規格:</p>
<p><span>足球規格 (ball): 白色, 直徑 0.1m, 重量 0.5kg</span></p>
<p><span>足球場地 (field): 長 4m x 寬 2.5m</span></p>
<p><span>球門規格 (goal[0] and goal[1]: 長 0.6m, 高 0.3m, 寬 0.1m</span></p>
<p><span>球員尺寸範圍(player[0]-player[7]: 長寬高各 0.2m, 重量 5kg</span></p>
<p><span></span></p>
<p><span>應交付內容:</span></p>
<p>專案三場景與多輪車零組件設計 (可使用各種 CAD 系統建立, 但必須提供完整的檔案下載連結)</p>
<p>專案三控制程式 (以 zmqRemoteAPI Python 製作)</p>
<p>專案三開會紀錄與逐字稿 (可利用 jit.si 或 OBS 或其他線上開會系統)</p>
<p>專案三各組員任務分配與執行過程影片 (可置於 Youtube 或 Onedrive)</p>
<p>專案三網站包括所有協同設計流程所衍生的檔案下載連結, 各檔案必須設法壓縮在 30 MB 內並置於網站downloads 目錄中.</p>
<p>專案三線上簡報檔案</p>
<p>專案三分組報告 pdf 檔案</p>
<p><span>直接利用 zmqRemoteAPI Python 程式建立場景物件:</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># zmqRemoteApi_IPv6 為將 zmq 通訊協定修改為 IPv4 與 IPv6 相容
from zmqRemoteApi_IPv6 import RemoteAPIClient
import time
import math
import keyboard

# 利用 zmqRemoteAPI 以 23000 對場景伺服器進行連線
client = RemoteAPIClient('localhost', 23000)
# 以 getObject 方法取得場景物件
sim = client.getObject('sim')
box = sim.getObject('/box')

# 啟動模擬
sim.startSimulation()
# 建立尺寸數列, 分別定義 x, y, z 方向尺寸
x = 0.2
y = 0.2
z = 0.1
size = [x, y, z]

# 利用 size 數列, 建立圓柱物件, 2 代表 cylinder
# 8 表示 respondable, 1 為 質量
digit1_handle = sim.createPureShape(2, 8, size, 1, None)
# 將圓柱物件命名為 digit1, 若用於機械計分可做為個位數轉盤
# 之後可再導入帶有數字組立的外型零件
sim.setObjectAlias(digit1_handle, 'digit1')
# 轉角單位為徑度
sim.setObjectOrientation(digit1_handle, -1, [0, math.pi/2, 0])
# 起始物件中心位於 [0, 0, 0], 為了位於地板, 往 z 提升一個半徑高度
sim.setObjectPosition(digit1_handle, -1, [0, 0, x/2])

# 建立 revolute joint 命名為 joint, 且將 joint mode 設為 dynamic, control mode 設為 velocity
joint1_handle = sim.createJoint(sim.joint_revolute_subtype, sim.jointmode_dynamic, 0, None)
sim.setObjectInt32Param(joint1_handle, sim.jointintparam_dynctrlmode, sim.jointdynctrl_velocity)
sim.setObjectAlias(joint1_handle, 'joint1')

# 取得 cylinder 的位置座標
digit1_pos = sim.getObjectPosition(digit1_handle, -1)
joint1_pos = [digit1_pos[0], digit1_pos[1], digit1_pos[2]]

# 將 joint1 至於 cylinder 中心
sim.setObjectPosition(joint1_handle, -1, joint1_pos)
# 取得 digit1_handle 的方位
digit1_ori = sim.getObjectOrientation(digit1_handle, -1)
# 將 joint1_handle 方位與 digit1 對齊
sim.setObjectOrientation(joint1_handle, -1, digit1_ori)

# 將 joint1 置於 box 上
sim.setObjectParent(joint1_handle, box, True)
# 將 cylinder 置於 joint1 上
sim.setObjectParent(digit1_handle, joint1_handle, True)

# 鎖定 joint1
sim.setJointForce(joint1_handle, float('inf'))

print("基本場景建立完成!")

# 設定主迴圈
while True:
    # 設定 joint1 目標速度
    sim.setJointTargetVelocity(joint1_handle, 10)
    # 讓 coppeliasim 有時間按照設定讓 joint1 旋轉
    time.sleep(0.01) 

    if keyboard.is_pressed('q'):
        # 可以按下 q 鍵跳出重複執行迴圈
        break

# 終止模擬
#sim.stopSimulation()</pre>
<p></p>
<h2>程式</h2>
<h2>圖檔</h2>
<h3>機器人</h3>
<p><a href="https://cad.onshape.com/documents/4f821302ed0bb2bdd5770f51/w/d6ec8767dc85798522c3788f/e/4513ebb2faaa290580d3a7d2?renderMode=0&amp;uiState=646e205860d2d00ecdd743e3">41023232機器人</a></p>
<p><a href="https://cad.onshape.com/documents/5b72a89922a24268b264b754/w/b1780e0b5407115f49b233e3/e/aeb9458fdb4663dbf2a8664c?renderMode=0&amp;uiState=646e254460d2d00ecdd74af6">41023231機器人</a> <a href="/downloads/snail.ttt">/downloads/snail.ttt</a> </p>
<p>41023231心得</p>
<p><a href="https://cad.onshape.com/documents/b6a7f7f605d07de42abcc0cf/w/b22fa2042b48626546682454/e/248fe3fdc15292f57d66e7d9?renderMode=0&amp;uiState=646e23aa70669217f1c0e4f5">41023230機器人</a></p>
<p><a href="https://cad.onshape.com/documents/5b72a89922a24268b264b754/w/b1780e0b5407115f49b233e3/e/aeb9458fdb4663dbf2a8664c?renderMode=0&amp;uiState=646e254460d2d00ecdd74af6"></a></p>
<h3>球場</h3>
<h3>記分板</h3>
<p><a href="/downloads/mechanical counter.zip">記分板零件和組合圖檔</a></p>
<p><a href="/downloads/STL.zip">記分板STL檔</a></p>
<h1>group</h1>
<div>41023226:<a href="https://github.com/mdecd2023/resume-41023226">resume</a>, <a href="https://mdecd2023.github.io/football-bpj1">football</a> (<a href="https://github.com/mdecd2023/football-bpj1">repo</a>), <a href="https://mdecd2023.github.io/2b-pj1bg15/">pj1</a> (<a href="https://github.com/mdecd2023/2b-pj1bg15">repo</a>), <a href="https://mdecd2023.github.io/2b2-pj2bg6/">pj2</a> (<a href="https://github.com/mdecd2023/2b2-pj2bg6">repo</a>), <a href="https://mdecd2023.github.io/2b3-pj3bg3/">pj3</a> (<a href="https://github.com/mdecd2023/2b3-pj3bg3">repo</a>)</div>
<div>41023233:<a href="https://github.com/mdecd2023/resume-Anguss676">resume</a>, <a href="https://mdecd2023.github.io/football-bpj1">football</a> (<a href="https://github.com/mdecd2023/football-bpj1">repo</a>), <a href="https://mdecd2023.github.io/2b-pj1bg15/">pj1</a> (<a href="https://github.com/mdecd2023/2b-pj1bg15">repo</a>), <a href="https://mdecd2023.github.io/2b2-pj2bg6/">pj2</a> (<a href="https://github.com/mdecd2023/2b-pj1bg15">repo</a>), <a href="https://mdecd2023.github.io/2b3-pj3bg3/">pj3</a> (<a href="https://github.com/Anguss676/2b3-pj3bg3">repo</a>)</div>
<div>41023220:<a href="https://github.com/mdecd2023/resume-41023220">resume</a>, <a href="https://mdecd2023.github.io/football-bpj1/">football</a> (<a href="https://github.com/mdecd2023/football-bpj1">repo</a>), <a href="https://mdecd2023.github.io/2b-pj1bg14/content/index.html">pj1</a> (<a href="https://github.com/mdecd2023/2b-pj1bg14">repo</a>), <a href="https://mdecd2023.github.io/2b2-pj2bg6/">pj2</a> (<a href="https://github.com/mdecd2023/2b2-pj2bg6">repo</a>), <a href="https://mdecd2023.github.io/2b3-pj3bg3/">pj3</a> (<a href="https://github.com/mdecd2023/2b3-pj3bg3">repo</a>)</div>
<div>41023232:<a href="https://github.com/mdecd2023/resume-YUN4">resume</a>, <a href="https://mdecd2023.github.io/football-bpj1/content/index.html">football</a> (<a href="https://github.com/mdecd2023/football-bpj1">repo</a>), <a href="https://mdecd2023.github.io/2b-pj1bg30/content/index.html">pj1</a> (<a href="https://github.com/mdecd2023/2b-pj1bg30">repo</a>), <a href="https://mdecd2023.github.io/2b2-pj2bg9/content/index.html">pj2</a> (<a href="https://github.com/mdecd2023/2b2-pj2bg9">repo</a>), <a href="https://mdecd2023.github.io/2b3-pj3bg3/content/index.html">pj3</a> (<a href="https://github.com/mdecd2023/2b3-pj3bg3">repo</a>)</div>
<div>41023230:<a href="https://github.com/mdecd2023/resume-41023230">resume</a>, <a href="https://mdecd2023.github.io/football-bpj1/">football </a>(<a href="https://github.com/mdecd2023/football-bpj1">repo</a>), <a href="https://mdecd2023.github.io/2b-pj1bg30">pj1</a> (<a href="https://github.com/mdecd2023/2b-pj1bg30">repo</a>), <a href="https://mdecd2023.github.io/2b2-pj2bg9">pj2</a> (<a href="https://github.com/mdecd2023/2b2-pj2bg9">repo</a>), <a href="https://mdecd2023.github.io/2b3-pj3bg3">pj3</a> (<a href="https://github.com/41023230/2b3-pj3bg3">repo</a>).</div>
<div>41023253:<a href="https://github.com/mdecd2023/resume-Tzm0306">resume</a><a href="https://mdecd2023.github.io/resume-41023253/">,</a> <a href="https://github.com/mdecd2023/football-bpj1">football</a> (<a href="https://mdecd2023.github.io/football-bpj1/content/index.html">repo</a>), <a href="https://mdecd2023.github.io/2b-pj1bg10/content/index.html">pj1</a> (<a href="https://github.com/mdecd2023/2b-pj1bg10">repo</a>), <a href="https://mdecd2023.github.io/2b2-pj2bg6/content/index.html">pj2</a> (<a href="https://github.com/mdecd2023/2b2-pj2bg6">repo</a>), <a href="https://mdecd2023.github.io/2b3-pj3bg3/content/index.html">pj3</a> (<a href="https://github.com/mdecd2023/2b3-pj3bg3">repo</a>)</div>
<div>41023231:<a href="https://github.com/mdecd2023/resume-zhan-uj">resume</a>, <a href="https://mdecd2023.github.io/football-bpj1/">football</a> (<a href="https://github.com/mdecd2023/football-bpj1">repo</a>), <a href="https://mdecd2023.github.io/2b-pj1bg29/">pj1</a> (<a href="https://github.com/mdecd2023/2b-pj1bg29">repo</a>), <a href="https://mdecd2023.github.io/2b2-pj2bg9/">pj2</a> (<a href="https://github.com/mdecd2023/2b2-pj2bg9">repo</a>), <a href="https://mdecd2023.github.io/2b3-pj3bg3/">pj3</a> (<a href="https://github.com/mdecd2023/2b3-pj3bg3">repo</a>)</div>
<div>41023250:<a href="https://mdecd2023.github.io/football-bpj1/content/index.html">football</a><span><span> </span>(</span><a href="https://github.com/mdecd2023/football-bpj1">repo</a><span>), </span><a href="https://mdecd2023.github.io/2b-pj1bg29/content/index.html">pj1</a>(<a href="https://github.com/mdecd2023/2b-pj1bg29">repo</a>), <a href="https://mdecd2023.github.io/2b2-pj2bg9/content/index.html">pj2</a><span>(<a href="https://github.com/mdecd2023/2b2-pj2bg9">repo</a>), <a href="https://mdecd2023.github.io/2b3-pj3bg3/content/index.html">pj3</a></span><span>(<a href="https://github.com/mdecd2023/2b3-pj3bg3">repo</a>)</span></div>
<p><button id="add1to100">2b亂數</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/41023226/03969267d66df8642a4447ce3b78b2cf/raw/d6f711c335e13f94bb9cef5bcfbfe6623f5589fa/w13"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/41023226/03969267d66df8642a4447ce3b78b2cf/raw/d6f711c335e13f94bb9cef5bcfbfe6623f5589fa/w13"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><!-- ########################################## -->
<div></div>
<h1>討論</h1>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/sfMJxHngHTI" title="YouTube video player" width="560"></iframe></p>
<p>5/22討論的大致內容 : 裡面討論我們對每個人對車子的設計理念，還有設計記分板的雛型</p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/EepDPyOwzQw" title="YouTube video player" width="560"></iframe></p>
<p>5/23日討論的內容，開始著手設計車子跟加入程式，並處理遇到的問題</p>